{"version":3,"sources":["types/types.js","apis/api.js","actions/data.js","actions/loader.js","components/header/Header.js","components/filters/Filters.js","actions/filters.js","components/charts/Charts.js","utils.js","components/table/Table.js","App.js","reducers/filterReducer.js","reducers/dataReducer.js","reducers/loaderReducer.js","store/store.js","reportWebVitals.js","index.js"],"names":["types","apiKey","getInfoCovid","filter","dispatch","url","fetch","then","data","json","actualsTimeseries","filteredData","processData","type","payload","getDataCovidStates","date","arrayStates","map","state","serie","serieByDate","getDataStates","slice","Header","as","Icon","name","Content","Subheader","Filters","useDispatch","onChange","target","value","Charts","useSelector","days","element","cases","dataInfo","labels","datasets","label","deaths","backgroundColor","useState","dateSelected","setDateSelected","useEffect","width","height","getElementsAtEvent","length","index","statesNames","AL","AK","AS","AZ","AR","CA","CO","CT","DE","DC","FL","GA","GU","HI","ID","IL","IN","IA","KS","KY","LA","ME","MD","MA","MI","MN","MS","MO","MT","NE","NV","NH","NJ","NM","NY","NC","ND","OH","OK","OR","PA","PR","RI","SC","SD","TN","TX","UT","VT","VI","VA","WA","WV","WI","WY","TablePadded","dataStates","Table","celled","padded","Row","HeaderCell","singleLine","textAlign","Body","Cell","App","loading","render","Segment","Dimmer","active","inverted","Loader","content","Image","src","Divider","Container","initialState","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","reducers","combineReducers","action","store","createStore","applyMiddleware","thunk","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","document","getElementById"],"mappings":"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","file":"static/js/main.5a039561.chunk.js","sourcesContent":["export const types = {\r\n  setFilter: \"SET_FILTER\",\r\n  getData: \"GET_DATA\",\r\n  getDataStates: \"GET_DATA_STATES\",\r\n  onLoader: \"ON_LOADER\",\r\n  offLoader: \"OFF_LOADER\",\r\n  setDate: \"SET_DATE\",\r\n};\r\n","import { getData, getDataStates } from \"../actions/data\";\r\nimport { offLoading } from \"../actions/loader\";\r\nconst apiKey = \"ea3cc0b36cf341818e81ef2d5b2a6618\";\r\nexport const getInfoCovid = (filter) => {\r\n  return (dispatch) => {\r\n    const url = `https://api.covidactnow.org/v2/country/US.timeseries.json?apiKey=${apiKey}`;\r\n\r\n    fetch(url)\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then(({ actualsTimeseries }) => {\r\n        const filteredData = processData(actualsTimeseries, filter);\r\n        dispatch(getData(filteredData));\r\n        dispatch(offLoading());\r\n      });\r\n  };\r\n};\r\n\r\nexport const getDataCovidStates = (date) => {\r\n  return (dispatch) => {\r\n    const url = `https://api.covidactnow.org/v2/states.timeseries.json?apiKey=${apiKey}`;\r\n\r\n    fetch(url)\r\n      .then((data) => {\r\n        return data.json();\r\n      })\r\n      .then((data) => {\r\n        const arrayStates = data.map((state) => {\r\n          const [serieByDate] = state.actualsTimeseries.filter(\r\n            (serie) => serie.date === date\r\n          );\r\n          const infoState = {\r\n            state: state.state,\r\n            serie: serieByDate,\r\n          };\r\n          return infoState;\r\n        });\r\n        dispatch(getDataStates(arrayStates));\r\n      });\r\n  };\r\n};\r\n\r\nconst processData = (data, filter) => {\r\n  switch (filter) {\r\n    case \"sevenDays\":\r\n      return data.slice(-8, -1);\r\n    case \"oneMonth\":\r\n      return data.slice(-32, -1);\r\n    default:\r\n      return data;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\nexport const getData = (data) => ({\r\n  type: types.getData,\r\n  payload: data,\r\n});\r\n\r\nexport const getDataStates = (data) => ({\r\n  type: types.getDataStates,\r\n  payload: data,\r\n});\r\n\r\nexport const setDate = (date) => ({\r\n  type: types.setDate,\r\n  payload: date,\r\n});\r\n","import { types } from \"../types/types\";\r\nexport const onLoading = () => ({\r\n  type: types.onLoader,\r\n});\r\n\r\nexport const offLoading = () => ({\r\n  type: types.offLoader,\r\n});\r\n","import { Header as HeaderSm, Icon } from \"semantic-ui-react\";\r\n\r\nexport default function Header() {\r\n  return (\r\n    <HeaderSm as=\"h2\">\r\n      <Icon name=\"chart bar\" />\r\n      <HeaderSm.Content>\r\n        Covid19\r\n        <HeaderSm.Subheader>Pandemic Histogram</HeaderSm.Subheader>\r\n      </HeaderSm.Content>\r\n    </HeaderSm>\r\n  );\r\n}\r\n","import { useDispatch } from \"react-redux\";\r\nimport { setFilter } from \"../../actions/filters\";\r\n\r\nexport default function Filters() {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSelect = ({ target }) => {\r\n    dispatch(setFilter(target.value));\r\n  };\r\n\r\n  return (\r\n    <select onChange={handleSelect}>\r\n      <option value=\"sevenDays\">Last 7 days</option>\r\n      <option value=\"oneMonth\">1 Month</option>\r\n      <option value=\"all\">All</option>\r\n    </select>\r\n  );\r\n}\r\n","import { types } from \"../types/types\";\r\nexport const setFilter = (filter) => ({\r\n  type: types.setFilter,\r\n  payload: filter,\r\n});\r\n","import { useEffect, useState } from \"react\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getDataCovidStates } from \"../../apis/api\";\r\nimport { setDate } from \"../../actions/data\";\r\nimport { Bar } from \"react-chartjs-2\";\r\n\r\nfunction Charts() {\r\n  const { data } = useSelector((state) => state.data);\r\n\r\n  const days = data\r\n    ? data.map((element) => element.date)\r\n    : [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\n\r\n  const cases = data\r\n    ? data.map((element) => element.cases)\r\n    : [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\n  const deaths = data\r\n    ? data.map((element) => element.deaths)\r\n    : [\"1\", \"2\", \"3\", \"4\", \"5\", \"6\"];\r\n\r\n  const dataInfo = {\r\n    labels: days,\r\n    datasets: [\r\n      {\r\n        label: \"# of deaths\",\r\n        data: deaths,\r\n        backgroundColor: \"rgb(255, 99, 132)\",\r\n      },\r\n      {\r\n        label: \"# of confirmed cases\",\r\n        data: cases,\r\n        backgroundColor: \"rgb(75, 192, 192)\",\r\n      },\r\n    ],\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const [dateSelected, setDateSelected] = useState(\"\");\r\n\r\n  useEffect(() => {\r\n    dispatch(getDataCovidStates(dateSelected));\r\n  }, [dateSelected]);\r\n\r\n  const getElementAtEvent = (element) => {\r\n    if (!element.length) return;\r\n\r\n    const { index } = element[0];\r\n    dispatch(setDate(dataInfo.labels[index]));\r\n    setDateSelected(dataInfo.labels[index]);\r\n  };\r\n\r\n  return (\r\n    <Bar\r\n      data={dataInfo}\r\n      width={100}\r\n      height={50}\r\n      getElementsAtEvent={getElementAtEvent}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Charts;\r\n","export const statesNames = {\r\n  AL: \"Alabama\",\r\n  AK: \"Alaska\",\r\n  AS: \"American Samoa\",\r\n  AZ: \"Arizona\",\r\n  AR: \"Arkansas\",\r\n  CA: \"California\",\r\n  CO: \"Colorado\",\r\n  CT: \"Connecticut\",\r\n  DE: \"Delaware\",\r\n  DC: \"District of Columbia\",\r\n  FL: \"Florida\",\r\n  GA: \"Georgia\",\r\n  GU: \"Guam\",\r\n  HI: \"Hawaii\",\r\n  ID: \"Idaho\",\r\n  IL: \"Illinois\",\r\n  IN: \"Indiana\",\r\n  IA: \"Iowa\",\r\n  KS: \"Kansas\",\r\n  KY: \"Kentucky\",\r\n  LA: \"Louisiana\",\r\n  ME: \"Maine\",\r\n  MD: \"Maryland\",\r\n  MA: \"Massachusetts\",\r\n  MI: \"Michigan\",\r\n  MN: \"Minnesota\",\r\n  MS: \"Mississippi\",\r\n  MO: \"Missouri\",\r\n  MT: \"Montana\",\r\n  NE: \"Nebraska\",\r\n  NV: \"Nevada\",\r\n  NH: \"New Hampshire\",\r\n  NJ: \"New Jersey\",\r\n  NM: \"New Mexico\",\r\n  NY: \"New York\",\r\n  NC: \"North Carolina\",\r\n  ND: \"North Dakota\",\r\n  OH: \"Ohio\",\r\n  OK: \"Oklahoma\",\r\n  OR: \"Oregon\",\r\n  PA: \"Pennsylvania\",\r\n  PR: \"Puerto Rico\",\r\n  RI: \"Rhode Island\",\r\n  SC: \"South Carolina\",\r\n  SD: \"South Dakota\",\r\n  TN: \"Tennessee\",\r\n  TX: \"Texas\",\r\n  UT: \"Utah\",\r\n  VT: \"Vermont\",\r\n  VI: \"Virgin Islands\",\r\n  VA: \"Virginia\",\r\n  WA: \"Washington\",\r\n  WV: \"West Virginia\",\r\n  WI: \"Wisconsin\",\r\n  WY: \"Wyoming\",\r\n};\r\n","import React from \"react\";\r\nimport { useSelector } from \"react-redux\";\r\nimport { Header, Table } from \"semantic-ui-react\";\r\nimport { statesNames } from \"../../utils\";\r\n\r\nconst TablePadded = () => {\r\n  const { dataStates } = useSelector((state) => state.data);\r\n\r\n  return (\r\n    <Table celled padded>\r\n      <Table.Header>\r\n        <Table.Row>\r\n          <Table.HeaderCell singleLine textAlign=\"center\">\r\n            State\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell singleLine textAlign=\"center\">\r\n            Number of confirmed cases\r\n          </Table.HeaderCell>\r\n          <Table.HeaderCell singleLine textAlign=\"center\">\r\n            Number of deaths\r\n          </Table.HeaderCell>\r\n        </Table.Row>\r\n      </Table.Header>\r\n\r\n      <Table.Body>\r\n        {dataStates.map((state) => {\r\n          return (\r\n            <Table.Row key={state.state}>\r\n              <Table.Cell textAlign=\"center\">\r\n                {statesNames[state.state]}\r\n              </Table.Cell>\r\n              <Table.Cell textAlign=\"center\">{state.serie?.cases}</Table.Cell>\r\n              <Table.Cell textAlign=\"center\">{state.serie?.deaths}</Table.Cell>\r\n            </Table.Row>\r\n          );\r\n        })}\r\n      </Table.Body>\r\n    </Table>\r\n  );\r\n};\r\n\r\nexport default TablePadded;\r\n","import { useEffect } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\n\nimport { getInfoCovid } from \"./apis/api\";\nimport \"./App.css\";\nimport {\n  Dimmer,\n  Loader,\n  Image,\n  Segment,\n  Container,\n  Divider,\n} from \"semantic-ui-react\";\nimport Header from \"./components/header/Header\";\nimport Filters from \"./components/filters/Filters\";\nimport Charts from \"./components/charts/Charts\";\nimport TablePadded from \"./components/table/Table\";\n\nfunction App() {\n  const dispatch = useDispatch();\n  const { filter } = useSelector((state) => state.filter);\n  const { loading } = useSelector((state) => state.loading);\n  const { date } = useSelector((state) => state.data);\n\n  useEffect(() => {\n    dispatch(getInfoCovid(filter));\n  }, [filter]);\n\n  let render = loading ? (\n    <Segment>\n      <Dimmer active inverted>\n        <Loader inverted content=\"Loading\" />\n      </Dimmer>\n\n      <Image src=\"https://react.semantic-ui.com/images/wireframe/short-paragraph.png\" />\n    </Segment>\n  ) : (\n    <>\n      <Header />\n      <Divider />\n      <Filters />\n      <Charts />\n      {date && (\n        <>\n          <Divider />\n          <h4>Day selected: {date}</h4>\n          <TablePadded />\n        </>\n      )}\n    </>\n  );\n  return <Container>{render}</Container>;\n}\n\nexport default App;\n","import { types } from \"../types/types\";\r\nconst initialState = {\r\n  filter: \"sevenDays\",\r\n};\r\nexport const filterReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.setFilter:\r\n      return { ...state, filter: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\nconst initialState = {\r\n  data: null,\r\n  dataStates: null,\r\n  date: null,\r\n};\r\nexport const dataReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.getData:\r\n      return { ...state, data: action.payload };\r\n    case types.getDataStates:\r\n      return { ...state, dataStates: action.payload };\r\n    case types.setDate:\r\n      return { ...state, date: action.payload };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { types } from \"../types/types\";\r\nconst initialState = {\r\n  loading: true,\r\n};\r\n\r\nexport const loaderReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case types.onLoader:\r\n      return { ...state, loading: true };\r\n    case types.offLoader:\r\n      return { ...state, loading: false };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, combineReducers, applyMiddleware, compose } from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport { filterReducer } from \"../reducers/filterReducer\";\r\nimport { dataReducer } from \"../reducers/dataReducer\";\r\nimport { loaderReducer } from \"../reducers/loaderReducer\";\r\n\r\nconst composeEnhancers =\r\n  (typeof window !== \"undefined\" &&\r\n    window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__) ||\r\n  compose;\r\n\r\nconst reducers = combineReducers({\r\n  filter: filterReducer,\r\n  data: dataReducer,\r\n  loading: loaderReducer,\r\n});\r\n\r\nexport const store = createStore(\r\n  reducers,\r\n  composeEnhancers(applyMiddleware(thunk))\r\n);\r\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport { Provider } from \"react-redux\";\nimport { render } from \"react-dom\";\nimport App from \"./App\";\nimport { store } from \"./store/store\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport \"semantic-ui-css/semantic.min.css\";\nimport \"./index.css\";\n\nrender(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}